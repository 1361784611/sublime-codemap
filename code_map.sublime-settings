{
    "close_empty_group_on_closing_map": true,
    "show_in_new_group": true,
    // width percentage of the screen
    "codemap_width": 0.20,

    // some extensions can cause trouble if they aren't defined in advance, or
    // even if you try to define them. Extensions in this list will be ignored
    // by the universal mapper, but will be interpreted if a custom mapper is
    // present in User/CodeMap/custom_mappers
    "exclusions":   [
                        "json"
                    ],

    // Map depth is remembered per view, so if you change depth in one file,
    // the others will still use the global setting below.
    // Depth doesn't work for custom mappers in User/CodeMap/custom_mappers,
    // unless you make a mapper that supports it by reading this setting.
    "depth": 2,

    // defined mappers with preferred extension universal is used as a backup
    // for undefined syntaxes to use the defined mappers below, they must be
    // present in this list. Don't put anything in this list that isn't
    // defined below.
    "syntaxes":     [
                        ["universal",   ""],
                        ["text",        "txt"],
                        ["python",      "py"],
                        ["C#",          "cs"]
                    ],

    ///////////////////////////////////////////////////////////////////
    // Order of preference for mappers is:                           //
    ///////////////////////////////////////////////////////////////////
    //
    // 1. defined mappers below, except "universal"
    // 2. mappers in User/CodeMap/custom_mappers
    // 3. "universal" mapper (can lead to undesirable results)

    ///////////////////////////////////////////////////////////////////
    // For each defined mapper:                                      //
    ///////////////////////////////////////////////////////////////////
    //
    // [0]: patterns to recognize: the inner list has elements:
    //      [0]: what to match at the beginning of the line
    //      [1]: pattern to replace from [0]
    //      [2]: optional substitution for [1]
    //
    // But these elements are themselves in a list, because you can define
    // more substitution patterns. So you have that [0] is a list of patterns
    // to recognize, and each of them has 3 elements. The different
    // match/substitution patterns are evaluated independently, and the
    // longest match is accepted, therefore try not to enter patterns that are
    // very generic together with other that are more specifc.
    //
    ////////////////////////////////////////////////////
    // The other elements are:                        //
    ////////////////////////////////////////////////////
    //
    //   [1]: obligatory indent  |  indent  |  new line pattern
    //   [2]: line numbers pos.  |  prefix  |  suffix
    //   [3]: syntax file Code Map
    //
    //   obligatory indent means that lines that aren't indented are ignored
    //   line numbers position: if 'true', numbers are displayed in front

    "universal": [[
                    [
                        "(?!if)\\S+? \\S+?[\\(\\[\\{].*?:",
                        "[\\(\\[\\{].*$",
                        ""
                    ]
                ],
                [false, 2, "class"],
                [false, "", ""],
                "Packages/Python/Python.tmLanguage"
            ],
    "text": [[
                    [
                        "",
                        "",
                        ""
                    ]
                ],
                [true, 2, ""],
                [true, "", ""],
                "Packages/Text/Plain text.tmLanguage"
            ],
    "python": [[
                    [
                        "(class |def ).*$",
                        "[(].*$",
                        ""
                    ]
                ],
                [false, 4, "class"],
                [false, "", "()"],
                "Packages/MagicPython/grammars/MagicPython.tmLanguage"
            ],
    "C#":   [[
                    [
                        "namespace.*$",
                        "\r",
                        ""
                    ],
                    [
                        "public (.+)( .*)$",
                        "\\\\2",
                        ""
                    ],
                ],
                [false, 4, "namespace |public |private"],
                [false, "", ""],
                "Packages/C#/C#.sublime-syntax"
            ],

}
